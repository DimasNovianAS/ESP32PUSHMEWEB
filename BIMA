#include <WiFi.h>
#include <HTTPClient.h>

// WiFi credentials
const char* ssid = "vivo Y27";
const char* password = "12345678";

// Server URL
const char* serverName = "https://b.rajatekniksolusi.com/insert_data.php";

// Define the pins for the ultrasonic sensors
const int trigPin1 = 5;
const int echoPin1 = 3;
const int trigPin2 = 8;
const int echoPin2 = 6;
const int trigPin3 = 4;
const int echoPin3 = 2;
const int trigPin4 = 18;
const int echoPin4 = 21;
const int trigPin5 = 16;
const int echoPin5 = 17;

const int jarak_dasar = 27;

void setup() {
  Serial.begin(115200);
  WiFi.begin(ssid, password);

  pinMode(15, OUTPUT);

  // Initialize pins for ultrasonic sensors
  pinMode(trigPin1, OUTPUT);
  pinMode(echoPin1, INPUT);
  pinMode(trigPin2, OUTPUT);
  pinMode(echoPin2, INPUT);
  pinMode(trigPin3, OUTPUT);
  pinMode(echoPin3, INPUT);
  pinMode(trigPin4, OUTPUT);
  pinMode(echoPin4, INPUT);
  pinMode(trigPin5, OUTPUT);
  pinMode(echoPin5, INPUT);

  // Connect to WiFi
  while (WiFi.status() != WL_CONNECTED) {
    digitalWrite(15,0);
    delay(1000);
    digitalWrite(15,1);
    delay(1000);
    Serial.println("Connecting to WiFi...");
  }
  digitalWrite(15, 1);

  Serial.println("Connected to WiFi");
}

long readUltrasonic(int trigPin, int echoPin) {
  digitalWrite(trigPin, LOW);
  delayMicroseconds(2);
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);

  long duration = pulseIn(echoPin, HIGH);
  long distance = jarak_dasar - (duration * 0.034 / 2);  // Convert duration to distance
  if (distance < 0) distance = 0;
  delay(200);
  return distance;
}

void loop() {
  if (WiFi.status() == WL_CONNECTED) {
    HTTPClient http;
    http.begin(serverName);
    http.addHeader("Content-Type", "application/x-www-form-urlencoded");

    // Read the ultrasonic sensor values
    float sensor1 = readUltrasonic(trigPin1, echoPin1);
    float sensor2 = readUltrasonic(trigPin2, echoPin2);
    float sensor3 = readUltrasonic(trigPin3, echoPin3);
    float sensor4 = readUltrasonic(trigPin4, echoPin4);
    float sensor5 = readUltrasonic(trigPin5, echoPin5);

    // Calculate the average
    float sensor6 = ((sensor1 + sensor2 + sensor3 + sensor4 + sensor5) / 5.0) * 30 * 30 / 1000;
    Serial.print(sensor1);
    Serial.print("     ");
    Serial.print(sensor2);
    Serial.print("     ");
    Serial.print(sensor3);
    Serial.print("     ");
    Serial.print(sensor4);
    Serial.print("     ");
    Serial.print(sensor5);
    Serial.print("     ");
    Serial.print(sensor6);
    Serial.println("     ");

    // Prepare the HTTP request data
    String httpRequestData = "sensor1=" + String(sensor1)
                             + "&sensor2=" + String(sensor2)
                             + "&sensor3=" + String(sensor3)
                             + "&sensor4=" + String(sensor4)
                             + "&sensor5=" + String(sensor5)
                             + "&sensor6=" + String(sensor6);

    int httpResponseCode = http.POST(httpRequestData);

    if (httpResponseCode > 0) {
      String response = http.getString();
      Serial.println(httpResponseCode);
      // Serial.println(response);
    } else {
      Serial.print("Error on sending POST: ");
      Serial.println(httpResponseCode);
    }

    http.end();
  } else {
    Serial.println("WiFi Disconnected");
  }

  delay(60000);  // Send data every 60 seconds
}
